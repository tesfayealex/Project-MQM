# Generated by Django 5.1.6 on 2025-03-03 14:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0010_response_survey_token_response_token'),
    ]

    operations = [
        migrations.CreateModel(
            name='SurveyAnalysisSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_count', models.IntegerField(default=0)),
                ('average_satisfaction', models.FloatField(default=0.0, help_text='Average NPS or satisfaction score')),
                ('median_satisfaction', models.FloatField(default=0.0)),
                ('satisfaction_confidence_low', models.FloatField(default=0.0, help_text='95% confidence interval - lower bound')),
                ('satisfaction_confidence_high', models.FloatField(default=0.0, help_text='95% confidence interval - upper bound')),
                ('satisfaction_score', models.FloatField(default=0.0, help_text='Calculated as [positive % - negative %]')),
                ('language_breakdown', models.JSONField(default=dict)),
                ('positive_percentage', models.FloatField(default=0.0)),
                ('negative_percentage', models.FloatField(default=0.0)),
                ('neutral_percentage', models.FloatField(default=0.0)),
                ('top_clusters', models.JSONField(default=list, help_text='IDs of most frequent clusters')),
                ('top_positive_clusters', models.JSONField(default=list, help_text='IDs of most positive clusters')),
                ('top_negative_clusters', models.JSONField(default=list, help_text='IDs of most negative clusters')),
                ('top_neutral_clusters', models.JSONField(default=list, help_text='IDs of most neutral clusters')),
                ('sentiment_divergence', models.FloatField(default=0.0, help_text='Frequency weighted sentiment score divergence')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('survey', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_summary', to='surveys.survey')),
            ],
        ),
        migrations.CreateModel(
            name='WordCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the cluster (e.g., 'Customer Service')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of what this cluster represents')),
                ('sentiment_score', models.FloatField(default=0.0, help_text='Average sentiment score for this cluster (-1 to 1)')),
                ('frequency', models.IntegerField(default=0, help_text='Number of times this cluster appears in responses')),
                ('is_positive', models.BooleanField(default=False, help_text='Whether this is classified as a positive cluster')),
                ('is_negative', models.BooleanField(default=False, help_text='Whether this is classified as a negative cluster')),
                ('is_neutral', models.BooleanField(default=True, help_text='Whether this is classified as a neutral cluster')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='word_clusters', to='surveys.survey')),
            ],
            options={
                'ordering': ['-frequency'],
            },
        ),
        migrations.CreateModel(
            name='ResponseWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(help_text='The extracted word or short phrase', max_length=100)),
                ('original_text', models.TextField(help_text='The original text context where this word appeared')),
                ('frequency', models.IntegerField(default=1, help_text='Frequency of this word in the response')),
                ('sentiment_score', models.FloatField(default=0.0, help_text='Sentiment score for this word (-1 to 1)')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German'), ('es', 'Spanish'), ('pt', 'Portuguese')], default='en', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_words', to='surveys.answer')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_words', to='surveys.response')),
                ('clusters', models.ManyToManyField(blank=True, related_name='words', to='surveys.wordcluster')),
            ],
            options={
                'ordering': ['-frequency', '-sentiment_score'],
                'indexes': [models.Index(fields=['word'], name='surveys_res_word_49e54e_idx'), models.Index(fields=['sentiment_score'], name='surveys_res_sentime_b77d0b_idx')],
            },
        ),
    ]
